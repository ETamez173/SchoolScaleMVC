@*@when I use the first one it only gets and displays the SchoolName*@
@model SchoolScoreMVC.Models.SchoolViewModels.SchoolSearchViewModel


@*@when I use the second one it says viewModel doesnt contain definition for Schools *@
@*@model IEnumerable<SchoolScoreMVC.Models.SchoolViewModels.SchoolSearchViewModel>*@
@*@model IEnumerable<SchoolScoreMVC.Models.SchoolViewModels.School>*@

@{
    ViewData["Title"] = "Search";
}

<h1>Matching Schools</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EducationName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SchoolName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AnnualCost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalCost)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Schools)
        {
            <tr>
                @*<td>
                    @Html.DisplayFor(modelItem => item.EducationName)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.SchoolName)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.AnnualCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalCost)
                </td>*@
                <td>
                    @Html.ActionLink("Run Analysis", "Edit", "Loan", new { id = item.Id })

                    @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |*@
                </td>
            </tr>
        }
    </tbody>
</table>
